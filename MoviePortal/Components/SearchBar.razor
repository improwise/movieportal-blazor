@using System.Timers
@implements IDisposable

<div class="search-container">
    <input type="text" class="search-input" placeholder="Search for movies..."
           @bind-value="SearchTerm"
           @bind-value:event="oninput"
           @onkeyup="HandleKeyUp" />
</div>

@code {
    private string SearchTerm = string.Empty;
    private Timer? debounceTimer;

    [Parameter] public EventCallback<string> OnSearch { get; set; }

    private void HandleKeyUp(KeyboardEventArgs e)
    {
        debounceTimer?.Dispose();
        debounceTimer = new Timer(500);
        debounceTimer.Elapsed += DebounceTimerElapsed;
        debounceTimer.Start();
    }

    private void DebounceTimerElapsed(object? sender, ElapsedEventArgs e)
    {
        debounceTimer?.Dispose();
        debounceTimer = null;
        InvokeAsync(async () =>
        {
            await OnSearch.InvokeAsync(SearchTerm);
            StateHasChanged();
        });
    }

    public void Dispose()
    {
        debounceTimer?.Dispose();
    }
}